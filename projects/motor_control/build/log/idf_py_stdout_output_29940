[1/12] Performing build step for 'bootloader'
[1/1] cd /Users/yeseniapuga/esp/projects/motor_control/build/bootloader/esp-idf/esptool_py && /Users/yeseniapuga/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/yeseniapuga/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/yeseniapuga/esp/projects/motor_control/build/bootloader/bootloader.bin
Bootloader binary size 0x6870 bytes. 0x790 bytes (7%) free.
[2/10] Linking C static library esp-idf/spiffs/libspiffs.a
[3/10] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/motor_control.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable motor_control.elf
[9/10] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/yeseniapuga/esp/projects/motor_control/build/motor_control.bin
[10/10] cd /Users/yeseniapuga/esp/projects/motor_control/build/esp-idf/esptool_py && /Users/yeseniapuga/.espressif/python_env/idf5.3_py3.11_env/bin/python /Users/yeseniapuga/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/yeseniapuga/esp/projects/motor_control/build/partition_table/partition-table.bin /Users/yeseniapuga/esp/projects/motor_control/build/motor_control.bin
motor_control.bin binary size 0x30d80 bytes. Smallest app partition is 0x100000 bytes. 0xcf280 bytes (81%) free.
